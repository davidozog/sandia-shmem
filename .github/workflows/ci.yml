on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  SOS_INSTALL: ${{ github.workspace }}/install/sos
  LIBFABRIC_INSTALL: ${{ github.workspace }}/install/libfabric
  LZ_INSTALL_PREFIX: ${{ github.workspace }}/install/l0

jobs:
  test:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        include:
          - config_name: ze
            sos_config_options: --with-ze=${LZ_INSTALL_PREFIX}

    steps:
    - uses: actions/checkout@v2
    - name: Checkout level zero
      uses: actions/checkout@v2
      with:
        repository: oneapi-src/level-zero
        path: repos/level-zero
        ref: v1.8.1
    - name: Build level zero
      run: |
        cd repos/level-zero
        mkdir build
        cd build
        cmake -D CMAKE_INSTALL_PREFIX=${LZ_INSTALL_PREFIX} ..
        make -j
        make install
    - uses: actions/checkout@v2
    - name: Checkout libfabric
      uses: actions/checkout@v2
      with:
        repository: ofiwg/libfabric
        path: repos/libfabric
        ref: v1.13.x
    - name: Build libfabric
      run: |
        cd repos/libfabric
        ./autogen.sh
        mkdir build
        cd build
        ../configure --prefix=${LIBFABRIC_INSTALL}
        make -j
        make install
    - name: Build SOS
      run: |
        ./autogen.sh
        mkdir build
        cd build
        ../configure --prefix=${SOS_INSTALL} --with-ofi=${LIBFABRIC_INSTALL} --enable-pmi-simple --enable-error-checking --disable-cxx --disable-fortran ${{ matrix.sos_config_options}} --disable-libtool-wrapper
        make -j check TESTS=
        make install
    - name: Run SOS unit tests
      run: |
        cd build
        make VERBOSE=1 TEST_RUNNER="${SOS_INSTALL}/bin/oshrun -n 2" check | tee test_out.log
    - name: Flush test results
      if: always()
      run: cat build/test_out.log 
